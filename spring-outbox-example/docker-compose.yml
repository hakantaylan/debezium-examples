version: "3.8"
services:
  postgres:
    container_name: postgres
    image: debezium/postgres:13-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    healthcheck:
      test: "pg_isready -U admin -d postgres"
      interval: 2s
      timeout: 20s
      retries: 10

  mongodb:
    image: 'bitnami/mongodb:4.4.8'
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGODB_ADVERTISED_HOSTNAME: mongodb
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_ROOT_PASSWORD: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGODB_REPLICA_SET_KEY: replicasetkey123
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/db --quiet
      interval: 2s
      timeout: 20s
      retries: 10

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:6.2.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:6.2.0
    ports:
      - "29092:29092"
#    depends_on:
#      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "9092" ]
      interval: 5s
      timeout: 30s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKERCONNECT: kafka:9092

  debezium-connect:
    container_name: debezium-connect
    build:
      context: ./custom-debezium-transformer
    ports:
      - "8083:8083"
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      CONFIG_STORAGE_TOPIC: debezium_connect_configs
      OFFSET_STORAGE_TOPIC: debezium_connect_offsets
      STATUS_STORAGE_TOPIC: debezium_connect_statuses
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1

  todos-service:
    container_name: todos-service
    image: todos-service:1.0
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_URL: jdbc:postgresql://postgres:5432/db
      POSTGRES_USERNAME: admin
      POSTGRES_PASSWORD: admin
      KAFKA_BOOSTRAP_SERVERS: kafka:9092
      KAFKA_GROUP_ID: todos-service

  tasks-service:
    container_name: tasks-service
    image: tasks-service:1.0
    ports:
      - "8081:8080"
    depends_on:
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      MONGODB_URI: mongodb://root:admin@mongodb:27017/db?authSource=admin
      KAFKA_BOOSTRAP_SERVERS: kafka:9092
      KAFKA_GROUP_ID: tasks-service
